/** apifox-generator
 *
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
"use strict";var e=require("minimist"),t=require("fs"),i=require("path"),n=require("comment-json"),r=require("chalk"),a=require("fs-extra"),s=require("axios"),o=require("single-line-log"),c=require("enquirer"),l=require("json-schema-to-typescript"),p=require("prettier"),u=require("dayjs"),d=require("eslint"),h=require("array-grouping"),f=require("klona"),m=require("typescript");function g(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function y(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var n=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,n.get?n:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}var w=g(e),x=g(t),j=y(t),q=y(i),P=g(i),k=g(r),b=g(a),$=g(s),v=y(l),S=g(p),F=g(u),I=g(m);function A(e,t,i,n){var r,a=arguments.length,s=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,n);else for(var o=e.length-1;o>=0;o--)(r=e[o])&&(s=(a<3?r(s):a>3?r(t,i,s):r(t,i))||s);return a>3&&s&&Object.defineProperty(t,i,s),s}function D(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}Object.create;Object.create;const U={step(e){console.log(k.default.blue("#",e))},message(e){console.log(k.default.green(">",e))},warn(e){console.log(k.default.yellow("!",e))},error(e){console.log(k.default.red("✖",e))},success(e){console.log(k.default.green("√",e))},query(e){console.log(k.default.yellow("?",e))}};class O{str=["█","▇","▆","▅","▄","▃","▂","▁","▂","▃","▄","▅","▇"];suffix="加载中...";duration=120;timer;n=0;show(){this.timer=setInterval((()=>this.render()),this.duration)}destory(){o.stdout(""),clearInterval(this.timer)}render(){const e=this.n%this.str.length,t=`${this.str[e]}  ${this.suffix}`;o.stdout(t),this.n++}}const R=e=>function(t,i,n){const r=n.value;n.value=async function(){const t=new O;t.suffix=e??t.suffix;try{return t.show(),await r.call(this,...arguments)}finally{t.destory()}}},N=e=>function(t,i,n){const r=n.value,{start:a,query:s,success:o,failure:c,exit:l}=e;n.value=async function(){try{s?U.query(s):a&&U.message(a);const e=await r.call(this,...arguments);return o&&U.success(o),e}catch(e){console.error(e),U.error(c??e?.message??"runtime error"),l&&process.exit(0)}}},L=$.default.create({baseURL:"https://api.apifox.cn/",headers:{Origin:"https://www.apifox.cn","X-Client-Mode":"web","X-Client-Version":"2.1.17-alpha.3","X-Device-Id":"xW9HUp7S8CME0TSuW8t5yc5MEyeYw2uHq0R71neRktaketlfC9UQOGcwwOpyED43"},data:{locale:"zh-CN"}});class C{async login(e,t){return await L({method:"POST",url:"/api/v1/login",data:{account:e,password:t}})}async treeList(e,t){return L({url:"/api/v1/api-tree-list",headers:{Authorization:e,"X-Project-Id":t}})}async details(e,t){return L({url:"/api/v1/api-details",headers:{Authorization:e,"X-Project-Id":t}})}async schema(e,t){return L({url:"api/v1/api-schemas",headers:{Authorization:e,"X-Project-Id":t}})}}A([R("登录中..."),D("design:type",Function),D("design:paramtypes",[String,String]),D("design:returntype",Promise)],C.prototype,"login",null),A([R("load list..."),D("design:type",Function),D("design:paramtypes",[String,String]),D("design:returntype",Promise)],C.prototype,"treeList",null),A([R("load details..."),D("design:type",Function),D("design:paramtypes",[String,String]),D("design:returntype",Promise)],C.prototype,"details",null),A([R("load schema..."),D("design:type",Function),D("design:paramtypes",[String,String]),D("design:returntype",Promise)],C.prototype,"schema",null);const M=new C,z=require("enquirer"),{Snippet:E}=require("enquirer"),B=new z;B.use((e=>{e.on("keypress",(()=>{})),e.on("cancel",(()=>process.exit(0)))}));const H=e=>function(){return"submitted"===this?.state?.status?k.default.gray(e):e},T=async e=>{const{input:t,exec:i,max:n,maxErrorMessage:r}=e;let a,s;for(let e=0;e<(n??3);e++)try{return a=await t(),i?(s=await i(a),s):a}catch(t){e+1!==(n??3)&&U.warn(t.message)}throw new Error(r??"失败次数过多, 脚本退出")},X=async e=>await T({input:async()=>{const{merge:t}=await B.prompt({type:"confirm",name:"merge",message:H(`目录 【${e}】存在子目录, 是否合并?`)});return t}});class G{static configFilePath=["apifox.rule.json"].map((e=>q.join(process.cwd(),e)));configPath;origin;config;constructor(){this.configPath=G.configFilePath.find((e=>j.existsSync(e)))||void 0}get exist(){return!!G.configFilePath.find((e=>j.existsSync(e)))}async check(){if(this.exist)return;await(async()=>await T({input:async()=>{const{create:e}=await B.prompt({type:"confirm",name:"create",message:H("缺少配置, 是否创建一个 apifox.rule.json 配置文件"),initial:!0});return e}}))()?this.write():process.exit(0)}read(){if(!this.configPath)return;const e=j.readFileSync(this.configPath,{encoding:"utf-8"});this.origin=n.parse(e),this.config=this.origin??{}}write(){this.configPath||(this.configPath=G.configFilePath[0]);const e=n.stringify(n.assign(this.config??{},this.origin??{}),null,4);j.writeFileSync(this.configPath,e,{encoding:"utf-8"})}}A([N({query:"check config file is exist"}),D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",Promise)],G.prototype,"check",null),A([N({success:"read config"}),D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",void 0)],G.prototype,"read",null),A([N({success:"write to file",failure:"write config failure",exit:!0}),D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",void 0)],G.prototype,"write",null);const W=c.Prompt,Y=e=>(e??[]).length;class _ extends W{value;tree=[];active=0;paging=[];constructor(e){super(e),this.tree=this.origin2tree(e.choices??[],e.initial??[]),this.value=e.initial??[]}origin2tree(e,t){let i=[];for(const n of e){let e=t.find((e=>e.id===n.id)),r={value:{id:n.id,name:n.name},show:!1,checked:!!e,children:[]};n.children?r.children=this.origin2tree(n.children,e?.children??[]):delete r.children,i.push(r)}return i}tree2origin(e){let t=[];for(const i of e)if(i.checked)t.push(i.value);else if(i.children){let e=this.tree2origin(i.children);e.length>0&&(t=t.concat(e))}return t}up(){this.active>0?this.active--:this.active=this.paging.length-1,this.render()}down(){this.active<=this.paging.length-1?this.active++:this.active=0,this.render()}left(){const e=this.paging.find(((e,t)=>t===this.active)),t=e=>{if(e&&(e.show=!1,e.children))for(const i of e.children)t(i)};t(e?.node),this.render()}right(){const e=this.paging.find(((e,t)=>t===this.active));e&&Y(e.node.children)>0&&(e.node.show=!0),this.render()}space(){const e=this.paging.find(((e,t)=>t===this.active)),t=(e,i)=>{if(e.checked=i,e.children)for(const n of e.children)t(n,i)},i=e=>{for(const t of e)if(t.children&&t.children.length>0){let e=t.children.some((e=>!e.checked));t.checked=!e,i(t.children)}};e&&t(e.node,!e.node.checked),i(this.tree),this.value=this.tree2origin(this.tree),this.render()}generateList(){const e=["+","-",k.default.blue("→"),"↓"],t=["⬡",k.default.blue("⬢")],i=(n,r=0)=>{for(const a of n){let n=[],s=this.paging.length,o="";n.push(new Array(r).fill("  ").join("")),o=a.show?e[3]:Y(a.children)>0?e[0]:s===this.active?e[2]:e[1],n.push(o),n.push(a.checked?t[1]:t[0]),n.push(" "),n.push(a.value.name);let c=n.join(" ");this.paging.push({node:a,str:s===this.active?k.default.bgGray(c):c}),a.show&&Y(a.children)>0&&i(a.children??[],r+1)}};return this.paging=[],i(this.tree),this.paging.map((e=>e.str)).join("\n")}async render(){let{size:e}=this.state,t="",i=await this.header(),n=await this.prefix(),r=await this.separator(),a=await this.message();!1!==this.options.promptLine&&(t=[n,a,r,""].join(" "),this.state.prompt=t);let s=await this.error()||await this.hint(),o=await this.generateList(),c=await this.footer();s&&!t.includes(s)&&(t+=" "+s),this.clear(e),this.write([i,t,o,c].filter(Boolean).join("\n")),this.write(this.margin[2]),this.restore()}}class Q{config;treeList=[];details=[];schemas=[];async run(e,t){if(this.config=e,t)if("string"==typeof t)for(const e of t.split(","))this.config[e]&&delete this.config[e];else this.config={};this.config.outDir=await(async e=>e||await T({input:async()=>{let e;const{outDir:t}=await B.prompt({type:"input",name:"outDir",message:H("设置导出目录"),initial:"./src/apis"}),i=x.default.existsSync(t);return i?U.success("path is existed."):e=(await B.prompt({type:"confirm",name:"create",message:H(`导出目录 [${k.default.blue(t)}] 不存在, 是否创建`),initial:!0})).create,{outDir:t,existed:i,create:e}},exec:async({outDir:e,existed:t,create:i})=>(i?b.default.mkdirsSync(e):t||process.exit(0),e)}))(this.config.outDir),this.config.appendIndexFile=await(async e=>void 0!==e?e:await T({input:async()=>{const{appendIndexFile:e}=await B.prompt({type:"confirm",name:"appendIndexFile",message:H("是否创建公共导出文件 [index.ts]"),initial:!0});return e}}))(this.config.appendIndexFile),this.config.template=await(async e=>{if(0===Object.keys(e??{}).length){const{def:t}=await B.prompt({type:"select",name:"def",message:H("是否使用默认生成模板"),choices:["默认模板","自定义模板"],initial:"默认模板"});if("默认模板"===t)return{header:["/** [group-path] - [group-name]"," *"," * @apifox [apifox-url]"," * @size (启用接口数量) [api-size]个"," * "," * @author apifox-generator"," */"],requestUtil:"request",importSyntax:"import { [requestUtil] } from [utilPath]",utilPath:"@/utils/request",globalRequestParams:{extend:null,keys:[],filter:"unrequire"},globalResponseParams:{extend:null,keys:[],filter:"unrequire"}};e={}}let t;if(!e.header){const{result:t}=await new E({name:"header",message:H("设置文件头样式"),template:["/** {{header:[group-path] - [group-name]}}"," *"," * @apifox {{lib:[apifox-url]}}"," * @size (启用接口数量) [api-size]"," * "," * @author {{author:apifox-generator}}"," */"].join("\n"),header:["**********************************************"," - [group-path] | 当前组的上级文件夹名称 (在存在同名分组时, 可能有些用处)"," - [group-name] | 组名 (apifox 文件夹名称)"," - [file-name]  | 文件名"," - [apifox-url] | 当前项目在apifox上的文件地址"," - [api-size] | | 当前文件夹下生成的接口数量","**********************************************"].join("\n")}).run();e.header=t.split("\n")}if(!e.importSyntax){let{importSyntax:t}=await B.prompt({type:"select",name:"importSyntax",message:H("设置导入语句格式"),choices:["import { [requestUtil] } from [utilPath]","import [requestUtil] from [utilPath]"]});e.importSyntax=t}if(!e.requestUtil){let{requestUtil:i}=await B.prompt({type:"select",name:"requestUtil",message:H("选择请求工具"),header:["*********************************************************************","","request - (推荐) axios.create() 创建的工具实例","axios - axios 默认实例","custom - 自定义请求工具, 需要实现 axios 请求方法","* 注: 由于 fetch api 格式不同, 所以暂时没有实现基于fetch的渲染模板","","*********************************************************************"].join("\n"),choices:["request","axios","custom"]});"custom"===i&&(i=(await B.prompt({type:"input",name:"requestUtil",message:H("输入自定义请求工具名称"),initial:"request"})).requestUtil),e.requestUtil=i,"axios"===i?e.importSyntax="import [requestUtil] from [utilPath]":t=!0}if(t){const{confirm:t}=await B.prompt({type:"confirm",name:"confirm",message:H(`是否使用 [${k.default.blue("@/utils/"+e.requestUtil)}] 作为工具地址`),initial:!0}),{utilPath:i}=await B.prompt({type:"input",name:"utilPath",message:H("请确认请求工具地址"),initial:`@/utils/${e.requestUtil}`,skip:t});e.utilPath=i}if(!e.globalRequestParams){U.step(`配置 ${k.default.magenta("(request params interface)")} 全局参数处理方式`);const{filter:t,keys:i}=await B.prompt([{type:"select",name:"filter",message:H("过滤方式 <filter>"),choices:[{name:"unrequire",message:"unrequire (非必填)"},{name:"delete",message:"delete (删除)"}],initial:"unrequire"},{type:"list",name:"keys",message:"全局变量keys <keys>",initial:[]}]),{extend:n}=await B.prompt({type:"input",name:"extend",message:H("父类 <extend>"),skip:0===i.length,initial:null});e.globalRequestParams={extend:""===n?null:n,filter:t,keys:i.filter((e=>e&&""!==e.trim())).map((e=>e.trim()))}}if(!e.globalResponseParams){U.step(`配置 ${k.default.magenta("(response data interface)")} 全局参数处理方式`);const{filter:t,keys:i}=await B.prompt([{type:"select",name:"filter",message:H("过滤方式 <filter>"),choices:[{name:"unrequire",message:"unrequire (非必填)"},{name:"delete",message:"delete (删除)"}],initial:"unrequire"},{type:"list",name:"keys",message:"全局变量keys <keys>",initial:[]}]),{extend:n}=await B.prompt({type:"input",name:"extend",message:H("父类 <extend>"),skip:0===i.length,initial:null});e.globalResponseParams={extend:""===n?null:n,filter:t,keys:i.filter((e=>e&&""!==e.trim())).map((e=>e.trim()))}}return e})(this.config.template),this.config.token=await(async e=>e||await T({input:async()=>{const{form:e}=await B.prompt({type:"form",name:"form",message:H("launch login..."),choices:[{name:"account",message:"账号/邮箱"},{name:"password",message:"密码"}]});return e},exec:async({account:e,password:t})=>{const i=await M.login(e,t),{data:n,success:r}=i.data;if(!r)throw new Error("登录失败, 请重试");return n.accessToken}}))(this.config.token),this.config.projectId=await(async(e,t)=>t||await T({input:async()=>{const{projectId:e}=await B.prompt({type:"input",name:"projectId",header:k.default.yellow("!","获取方式 (projectId): 通过apifox web端进入项目后, 从url参数中获取"),message:H("projectId")});return e},exec:async t=>{try{return await M.treeList(e,t),t}catch(e){throw new Error(`此项目[projectId: ${k.default.magenta(t)}]不存在, 请确认`)}}}))(this.config.token,this.config.projectId),await this.pullData();const i=this.readApisDirectory(this.treeList);return(this.checkApisIsUpgraded(i,this.config.folders??[])||0==(this.config.usage??[]).length)&&(this.config.folders=i,this.config.usage=await this.multiSelectUsageApis(this.config.folders,this.config.usage??[])),await this.upgradeFileNameMap(),this.config}async pullData(){const e=await M.treeList(this.config.token,this.config.projectId),t=await M.details(this.config.token,this.config.projectId),i=await M.schema(this.config.token,this.config.projectId),{data:n}=e.data,{data:r}=t.data,{data:a}=i.data;this.treeList=n,this.details=r,this.schemas=a}readApisDirectory(e,t=[]){for(const{key:i,name:n,children:r}of e){const[e,a]=i.split(".");let s={id:a,name:n,children:[]};"apiDetailFolder"===e&&(this.readApisDirectory(r,s.children),t.push(s))}return t}checkApisIsUpgraded(e,t){const i=e=>e.reduce(((e,t)=>{if(e.push(t),t.children){let n=i(t.children);return[...e,...n]}return e}),[]),n=i(e),r=i(t);return n.filter((e=>!r.some((t=>t.id===e.id)))).length>0}async multiSelectUsageApis(e,t){const i=await new _({message:"选择需要生成的接口集合",choices:e,initial:t,header:["********************************************************************************","生成规则:"," * 以下规则主要应对apifox文件夹出现多层嵌套的情况",""," - 如果一个文件夹下的所有子文件夹被选中, 则接口合并到这个文件夹内"," - 存在一点局限性, 如果一个文件夹下同时存在接口和文件夹时, 将被当作文件夹处理","********************************************************************************"].join("\n")}).run(),n=(e,t)=>{for(const i of e){if(i.id===t.id)return i;if(i.children){const e=n(i.children,t);if(e)return e}}return null};let r=[];const a=async(t,i)=>{for(const s of t){const t=n(e,s);if(t?.children&&t.children.length>0){await X([...i,t.name].join("/"))?r.push({id:s.id,name:s.name}):await a(t.children,[...i,t.name])}else r.push({id:s.id,name:s.name})}};return await a(i,[]),r}async upgradeFileNameMap(){this.config.mapFile||(this.config.mapFile=[]);const e=t=>{let i=[];for(const n of t)i.push(n),n.children&&(i=i.concat(e(n.children)));return i},t=e(this.config.usage).filter((e=>!this.config.mapFile.some((t=>t.id===e.id&&t.file&&""!==t.file?.trim())))),i=await(async e=>0===e.length?[]:await T({input:async()=>{const{form:t}=await B.prompt({type:"form",name:"form",header:"> 注: 输入文件名时, 不需要填写'.ts'文件名后缀",message:H("设置接口映射文件名"),align:"left",choices:e.map((e=>({name:e.id,message:" "+e.name}))),validate(t){let i=[],n=[];for(const r in t){let a=e.find((e=>e.id===r))?.name??"",s=t[r];s&&""!==s.trim()?n.some((e=>e.v===s))&&i.push(`${a} - 命名 '${s}' 存在重复项. repeat: ${n.find((e=>e.v===s))?.lab}`):i.push(`${a} - 未设置文件名`),n.push({lab:a,v:s})}return!(i.length>0)||[k.default.red("\n**************** 错误提示 *****************"),k.default.cyan(i.join("\n")),k.default.red("******************************************")].join("\n")}});return t},exec(t){let i=[];for(const n in t){const r=t[n],a=e.find((e=>e.id===n))?.name??"";i.push({id:n,name:a,file:r})}return i}}))(t);for(const e of i){let t=this.config.mapFile.findIndex((t=>t.id===e.id));-1===t?this.config.mapFile.push(e):this.config.mapFile[t]=e}}}A([N({query:"check and configure generate params",success:"configure completed",failure:"configuration item check not completed, task exit",exit:!0}),D("design:type",Function),D("design:paramtypes",[Object,Object]),D("design:returntype",Promise)],Q.prototype,"run",null),A([N({start:"pull project data...",success:"pull completed",exit:!0}),D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",Promise)],Q.prototype,"pullData",null),A([N({query:"check api name mapping is filled",success:"adopt",failure:"unknow excaption",exit:!0}),D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",Promise)],Q.prototype,"upgradeFileNameMap",null);const K={printWidth:120,tabWidth:4,useTabs:!1,semi:!1,singleQuote:!0,quoteProps:"as-needed",jsxSingleQuote:!0,trailingComma:"none",bracketSpacing:!0,arrowParens:"always",proseWrap:"preserve",endOfLine:"auto"},V=(e,t,i)=>{if(e instanceof Array)for(const i of e)V(i,t,e);else if("object"==typeof e){if("string"==typeof e.title&&(e.description?e.description=e.title+" | "+e.description:e.description=e.title,delete e.title),e.properties&&!i)for(const i in e.properties)if(t.keys.includes(i))if("delete"===t.filter)delete e.properties[i];else{e.required=e.required.filter((e=>e!==i));let t=e.properties[i];t.title?t.title="(全局变量) "+t.title??"":t.description="(全局变量) "+t.description??""}for(const i in e){const n=e[i];V(n,t,e)}}},J=(e,t)=>{e&&t&&""!==t.trim()&&(e.extends={title:t,type:"any"})},Z=e=>e.replace(/[\_\-](\w)/g,((e,t)=>t.toUpperCase())),ee=(e,t)=>`I${e=(e=Z(e)).replace(/^([\w])/,((e,t)=>t.toUpperCase()))}${t}`,te=(e,t)=>(t[e]?t[e]++:t[e]=1,e+=1===t[e]?"":t[e]-1);class ie{config;details;js;eslint=new d.ESLint({fix:!0,overrideConfig:{parser:"@typescript-eslint/parser",plugins:["@typescript-eslint"],rules:{"@typescript-eslint/array-type":[2,{default:"generic"}]}}});async exec(e,t){const{config:i,details:n,treeList:r,schemas:a}=e;this.config=i,this.details=n,this.js=!!t;const{outDir:s,usage:o}=i,c=[];((e=[],t=[])=>{const i=e=>{if(e instanceof Array)for(const t of e)i(t);else if("object"==typeof e){if(e&&e.$ref){const[,,i]=e.$ref.split("/");delete e.$ref;const n=t.find((({id:e})=>e.toString()===i));n&&(Object.assign(e,f.klona(n.jsonSchema)),delete e.$ref)}for(const t in e)i(e[t])}};i(t),i(e)})(n,a);for(const{id:e,name:t}of o){const n=i.mapFile.find((t=>t.id===e))?.file??"undefined",a=this.findApisByFolder(r,e);this.checkDuplicatePath(a);const s={},o=[];for(const e of a){const t=await this.transformApiInfo(e,s);o.push(t)}const l=this.findGroupPath(e,r),p=this.generateHeader(n,t,l,o.length),u=this.generateContext(t,o);c.push({moduleName:q.basename(n),comment:t,mapFile:n,header:p,context:u})}for(const e of c)await this.outputFile(s,e.mapFile,e.header,e.context);this.config.appendIndexFile&&this.outputFile(s,"index.ts",this.generateIndexFile(c),"")}findApisByFolder(e,t){let i=[];const n=e=>{for(const i of e){const[e,r]=i.key.split(".");if(`${r}`==`${t}`)return i.children;if("apiDetailFolder"===e){let e=n(i.children);if(e)return e}}return null},r=e=>{let t=[];for(const i of e){const{type:e}=i;if("apiDetailFolder"===e){let e=r(i.children);t=t.concat(e)}else"apiDetail"===e&&t.push(i)}return t};return i=(e=>e.map((e=>{const[,t]=e.key.split(".");return this.details.find((e=>e.id==t))})))(r(n(e)??[])),i}findGroupPath(e,t){const i=t=>{for(const n of t){if(n.children){let e=i(n.children);if(e.length>0)return e.push(n),e}if(n.api?.id===e)return[n]}return[]},n=i(t);return n.pop(),0===n.length?"*":n.map((e=>e.name)).join(" - ")}checkDuplicatePath(e){const t=h.GroupBy(e,((e,t)=>e.path===t.path)).reduce(((e,t)=>(t.length>1&&e.push(`> 存在相同接口定义: ${t[0].path}`),e)),[]);if(t.length>0){t.unshift("\n*************************************\n"),t.push("\n\n\n");for(const e of t)U.error(e);process.exit(-1)}}async transformApiInfo(e,t){const{id:i,method:n,path:r,name:a,createdAt:s,updatedAt:o}=e,{globalRequestParams:c,globalResponseParams:l}=this.config.template,p=te(Z(q.basename(r)),t),u=te(ee(q.basename(r),"Params"),t),d=ee(q.basename(r),"Response");V(e.requestBody.jsonSchema,c),J(e.requestBody.jsonSchema,c.extend);let h="";const f={bannerComment:"",unreachableDefinitions:!0,declareExternallyReferenced:!1,ignoreMinAndMaxItems:!0,additionalProperties:!1,unknownAny:!1};if(Object.keys(e.requestBody?.jsonSchema?.properties||{}).length>0)try{h=await v.compile(e.requestBody.jsonSchema,u,f)}catch(e){U.error("json2ts parser error: "+u),h=`export interface ${u} { [key:string|number]: any }`}else h=null;const m=[],g=[];for(const i of e.responses){V(i.jsonSchema,l),J(i.jsonSchema,l.extend);const e=te(d,t);let n;try{n=await v.compile(i.jsonSchema,e,f)}catch(t){U.error("json2ts parser error: "+e),n=`export interface ${e} { [key:string|number]: any }`}m.push(e),g.push(n)}return{id:i,method:n,path:r,name:a,basename:p,createdAt:s,updatedAt:o,hasParams:!!h,params:h,responses:g,paramsName:u,responseNames:m}}generateHeader(e,t,i,n){const{header:r,importSyntax:a,requestUtil:s,utilPath:o,globalRequestParams:c,globalResponseParams:l}=this.config.template;let p="",u=a.replace("[requestUtil]",s).replace("{ axios }","axios").replace("[utilPath]",`"${"axios"===s?"axios":o}"`).replace(/["']{2}/g,'"');if(c.extend||l.extend){let e=[c.extend,l.extend].filter((e=>e)).join(", ");u=!/\{/.test(u)?u.replace(s,`${s}, { ${e} } `):u.replace(s,`${s}, ${e}`)}return p+=u,p+="\n",p+="\n",p+=r instanceof Array?r.join("\n"):r,p+="\n",p=p.replace(/\[group-path\]/g,i).replace(/\[group-name\]/g,t).replace(/\[file-name\]/g,e).replace(/\[apifox-url\]/g,`https://www.apifox.cn/web/project/${this.config.projectId}`).replace(/\[api-size\]/g,n.toString()),p+="\n\n",p}generateContext(e,t){const{requestUtil:i}=this.config.template;let n,r="";for(const a of t){a.hasParams&&(r+=`/** params interface | ${a.name} */`,r+="\n",r+=a.params,r+="\n"),n=!a.params||!/[\w]+:/gm.test(a.params),r+=`/** response interface | ${a.name} */`,r+="\n",r+=a.responses.join("\n"),r+="\n";const t=a.hasParams?", params":"",s=`'${a.path}'`;let o=`\n                /** ${e} - ${a.name}\n                 * \n                 * [params comment]\n                 * @updateAt ${F.default(a.updatedAt).format("YYYY-MM-DD HH:mm")}\n                 */\n                export const ${a.basename} = async ([params]) [response name] => {\n                    return ${i}.${a.method.toLowerCase()}(${s}${t})\n                }\n            `;o=o.replace(/\[api url\]/,a.path),a.hasParams?(o=o.replace(/\[params comment\]/,`@param {${a.paramsName}} params`),o=o.replace(/\[params\]/,`params${n?"?":""}: ${a.paramsName}`)):(o=o.replace(/\[params comment\]/,""),o=o.replace(/\[params\]/,"")),o=a.responseNames.length>0?o.replace(/\[response name\]/,": Promise<"+a.responseNames.join(" | ")+">"):o.replace(/\[response name\]/,""),r+=o,r+="\n\n"}return r=r.replace(/\/\*\*\n.+?\* (.*)\n.*\*\//g,((e,t)=>`/** ${t} */`)),r=r.replace(/NoName/g,"any // 注: 工具协议版本低, 未识别对象类型"),r}generateIndexFile(e){const t=e.map((e=>`import * as ${Z(e.moduleName)} from './${e.moduleName}'`)),i=e.map((e=>[`/** ${e.comment} */`,Z(e.moduleName)].join("\n")));return`\n        ${t.join("\n")}\n        \n        /** apis 接口集合 */\n        export const apis = {\n            ${i.join(",\n")}\n        }\n        `.trim()}async outputFile(e,t,i,n){a.mkdirsSync(e);const r=await(async()=>{const e=P.default.join(__dirname,"prettier.config.js");let t;var i;return x.default.existsSync(e)&&(t=await(i=e,Promise.resolve().then((function(){return y(require(i))})))),{...K,...t}})();let s=i+"\n"+n;this.js&&(s=I.default.transpile(s,{strict:!1,target:m.ScriptTarget.ESNext,module:m.ModuleKind.ESNext,declaration:!0}));try{s=(await this.eslint.lintText(s,{}))[0].output??s,s=S.default.format(s,{parser:"typescript",...r})}catch(e){U.error("typescript parser failure. please check: "+k.default.magenta(t))}let o=q.join(e,t).replace(/\.(tj)s$/,"");this.js?o+=".js":o+=".ts",j.writeFileSync(o,s,{encoding:"utf-8"})}}A([N({start:"start generate",success:"success",exit:!0}),R("generate..."),D("design:type",Function),D("design:paramtypes",[Q,Boolean]),D("design:returntype",Promise)],ie.prototype,"exec",null);module.exports=class{loader=new G;configure=new Q;generator=new ie;async exec(){const{r:e,js:t,init:i}=w.default(process.argv);if(i)return this.init();await this.loader.check(),await this.loader.read(),await this.configure.run(this.loader.config,e),await this.loader.write(),await this.generator.exec(this.configure,t)}async init(){await this.configure.run(this.loader.config,!0),await this.loader.write()}};
